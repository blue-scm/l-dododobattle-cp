@use "src/scss/global" as *;
@use "sass:math";

.mv {
    width: 100%;
    height: 100lvh;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;

    @media (min-aspect-ratio: 15 / 28) and (max-width: 959px) {
        height: auto;
        display: block;
        padding-top: getRem(68);
    }

    @media (min-width: 960px) and (max-height: 940px) {
        height: auto;
        display: block;
        padding-top: getRem(68);
    }
}

.mv__inner {
    width: 100%;
    position: relative;
}

.mv__logo {
    width: getRem(277);
    margin: 0 auto;
}

.mv__chara {
    &.-brown {
        @include absPosition(getRem(-37), getRem(-3));
        width: getRem(102);
    }

    &.-sally {
        @include absPosition(getRem(-68), null, null, getRem(-13));
        width: getRem(122);
    }
}

.mv__main {
    @include absPosition(getRem(-48), 0);
    width: 100%;

    canvas {
        width: 100%;
        height: auto;
    }
}

.mv__link {
    position: relative;
    display: block;
    margin: getRem(296) auto 0;
    width: getRem(350);
}

.mv__x {
    display: block;
    position: relative;
    margin: getRem(8) auto 0;
    width: getRem(282);
    height: getRem(58);
    background-image: url("/ja/dododo-cp/assets/img/mv/ph_btn_x.webp");
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
}

.mv__x__baloon {
    @include absPosition(50%, getRem(-40));
    width: getRem(64);
    translate: 0 -50%;
}

.mv__x__detail {
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: getRem(8);
}

.mv__x__icon {
    width: getRem(32);
}

.mv__x__text {
    width: getRem(111);
}

[data-mv-anime-logo] {
    opacity: 0;
    scale: 1.5;
    rotate: -180deg;
}

[data-mv-anime-brown] {
    opacity: 0;
    transform: translateX(10%) translateY(20%);
}

[data-mv-anime-sally] {
    opacity: 0;
    transform: translateX(-10%) translateY(20%);
}

[data-mv-anime-other] {
    opacity: 0;
}

.is-anime {
    animation: trembling 1.8s ease-out infinite;
    transform: translateX(0);
}

@keyframes trembling {
    0% {
        transform: translateX(-5%);
    }
    10% {
        transform: translateX(5%);
    }
    20% {
        transform: translateX(0);
    }
    30% {
        transform: translateX(-5%);
    }
    40% {
        transform: translateX(5%);
    }
    50% {
        transform: translateX(0);
    }
    100% {
        transform: translateX(0);
    }
}
