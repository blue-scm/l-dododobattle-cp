{"version":3,"file":"main.js","mappings":"0BAAO,SAAwBA,GAE3B,MAAMC,EAAWC,SAASC,qBAAqB,QAAQ,GACjDC,EAAaF,SAASG,cAAc,UAC1CD,EAAWE,IAAM,qCACjBL,EAASM,YAAYH,GAErB,MAAMI,EAAaN,SAASO,iBAAiB,uBACvCC,EAAeR,SAASO,iBAAiB,wBAA0B,GACpDP,SAASO,iBAAiB,uBAG/CE,OAAOC,wBAA0B,KAC7BJ,EAAWK,SAASC,IAChBd,EAASe,eAAeD,EAAU,IAGtCJ,EAAaG,SAASG,IAClBA,EAAYC,iBAAiB,SAAUC,IACnC,MAAMC,EAAcD,EAAEE,cAAcC,QAAQL,YAC5ChB,EAASsB,KAAKH,EAAY,GAC5B,GACJ,CAEV,CCnBII,CADiB,ICJd,MACH,WAAAC,GACIC,KAAKC,QAAU,CAAC,CACpB,CAEA,cAAAX,CAAeD,GACX,MAAMa,EAAUb,EAAUO,QAAQO,YAC5BT,EAAcL,EAAUe,GAC9BJ,KAAKC,QAAQP,GAAe,CAAC,EAC7BM,KAAKC,QAAQP,GAAaQ,QAAUA,EACpCF,KAAKC,QAAQP,GAAaW,SAAW,IAAIC,GAAGC,OAAOb,EAAa,CAC5Dc,OAAQ,MACRC,MAAO,MACPP,QAASA,EACTQ,WAAY,CACRC,SAAU,EACVC,YAAa,EACbC,SAAU,EACVC,KAAM,GAEVC,OAAQ,CACJC,cAAehB,KAAKgB,cAAcC,KAAKjB,MACvCkB,QAASlB,KAAKkB,UAG1B,CAEA,aAAAF,EAAc,OAAEG,IAEZC,OAAOC,KAAKrB,KAAKC,SAASb,SAASM,IAC/B,MAAM4B,EAAStB,KAAKC,QAAQP,GAAaW,SACrCiB,IAAWH,GACDG,EAAOC,mBACPjB,GAAGkB,YAAYC,SACzBH,EAAOI,WACX,GAER,CAEA,IAAA7B,CAAKH,GACDM,KAAKC,QAAQP,GAAaW,SAASsB,WACvC,CAEA,IAAAC,CAAKlC,GACDM,KAAKC,QAAQP,GAAaW,SAASqB,WACvC,CAEA,OAAAR,CAAQzB,GACJoC,QAAQC,IAAIrC,EAChB,G","sources":["webpack:///./src/es6/dododo-cp/handleYtPlayer.es6","webpack:///./src/es6/dododo-cp/main.es6","webpack:///./src/es6/dododo-cp/YtPlayer.es6"],"sourcesContent":["export function handleYtPlayer(ytPlayer) {\n    // iframe_api読み込み\n    const headElem = document.getElementsByTagName(\"head\")[0];\n    const scriptElem = document.createElement(\"script\");\n    scriptElem.src = \"https://www.youtube.com/iframe_api\";\n    headElem.appendChild(scriptElem);\n\n    const containers = document.querySelectorAll(\"[data-yt-container]\");\n    const playTriggers = document.querySelectorAll(\"[data-play-trigger]\") || [];\n    const stopTriggers = document.querySelectorAll(\"[data-stop-trigger]\") || [];\n\n    // iframe_api読み込み後に発火\n    window.onYouTubeIframeAPIReady = () => {\n        containers.forEach((container) => {\n            ytPlayer.setYtPlayerIns(container);\n        });\n\n        playTriggers.forEach((playTrigger) => {\n            playTrigger.addEventListener(\"click\", (e) => {\n                const containerId = e.currentTarget.dataset.playTrigger;\n                ytPlayer.play(containerId);\n            });\n        });\n    };\n}\n","import { handleYtPlayer } from \"./handleYtPlayer.es6\";\nimport { YtPlayer } from \"./YtPlayer.es6\";\n\nfunction main() {\n    const ytPlayer = new YtPlayer();\n    handleYtPlayer(ytPlayer);\n}\n\nmain();\n","export class YtPlayer {\n    constructor() {\n        this.players = {};\n    }\n\n    setYtPlayerIns(container) {\n        const videoId = container.dataset.ytContainer;\n        const containerId = container.id;\n        this.players[containerId] = {};\n        this.players[containerId].videoId = videoId;\n        this.players[containerId].instance = new YT.Player(containerId, {\n            height: \"350\",\n            width: \"180\",\n            videoId: videoId,\n            playerVars: {\n                controls: 0,\n                playsinline: 1,\n                autoplay: 1,\n                mute: 1,\n            },\n            events: {\n                onStateChange: this.onStateChange.bind(this),\n                onError: this.onError,\n            },\n        });\n    }\n\n    onStateChange({ target }) {\n        //同時再生させないため再生中の他のプレーヤーがあれば止める\n        Object.keys(this.players).forEach((containerId) => {\n            const player = this.players[containerId].instance;\n            if (player === target) return;\n            const state = player.getPlayerState();\n            if (state === YT.PlayerState.PLAYING) {\n                player.stopVideo();\n            }\n        });\n    }\n\n    play(containerId) {\n        this.players[containerId].instance.playVideo();\n    }\n\n    stop(containerId) {\n        this.players[containerId].instance.stopVideo();\n    }\n\n    onError(e) {\n        console.log(e);\n    }\n}\n"],"names":["ytPlayer","headElem","document","getElementsByTagName","scriptElem","createElement","src","appendChild","containers","querySelectorAll","playTriggers","window","onYouTubeIframeAPIReady","forEach","container","setYtPlayerIns","playTrigger","addEventListener","e","containerId","currentTarget","dataset","play","handleYtPlayer","constructor","this","players","videoId","ytContainer","id","instance","YT","Player","height","width","playerVars","controls","playsinline","autoplay","mute","events","onStateChange","bind","onError","target","Object","keys","player","getPlayerState","PlayerState","PLAYING","stopVideo","playVideo","stop","console","log"],"sourceRoot":""}