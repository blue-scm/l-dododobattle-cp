services:
  webserver:
    image: httpd:latest
    volumes:
      - ./html:/usr/local/apache2/htdocs/
    ports:
      - "${WEBSERVER_PORT}:80" # ブラウザからアクセスする場合（0にしておくとDockerが任意の数字を自動で割り当てる）：コンテナ間での通信（80）

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src:/app/src
      - ./html:/app/html
      - ./package.json:/app/package.json
      - ./yarn.lock:/app/yarn.lock
      - nodemodule-content:/app/node_modules # node_modules を永続化し、ビルド時のキャッシュに利用
    environment:
      - WEB_SERVER_PROXY=webserver:80
      - BROWSER_SYNC_LOCAL_PORT=${BROWSER_SYNC_LOCAL_PORT}
      - BROWSER_SYNC_UI_PORT=${BROWSER_SYNC_UI_PORT}
      - ES5_MODE=${ES5_MODE}
    ports:
      - "${BROWSER_SYNC_LOCAL_PORT}:${BROWSER_SYNC_LOCAL_PORT}"  # Browsersync Local
      - "${BROWSER_SYNC_UI_PORT}:${BROWSER_SYNC_UI_PORT}"  # Browsersync UI
    command: sh -c "yarn install && if [ \"$ES5_MODE\" = \"true\" ]; then yarn run dev:es5; else yarn run dev; fi"
    depends_on:
      - webserver

volumes:
  nodemodule-content: # nodeModuleを永続化。こうするとbuild時にキャッシュしてくれる